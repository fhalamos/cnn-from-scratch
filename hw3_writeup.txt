Design/choose your own model structure (12 points) and optimizer (3 points).

(1) Model hyperparams:
- Filter size, Number of filters and layers. You need to make careful choices to
tradeoff the computational efficiency and accuracy (especially in this assignment).
- Pooling vs Strided Convolution
- Batch normalization

(2) New Network architecture:
- You can borrow some cool ideas from novel convnets design, such as ResNet where
the input from the previous layer is added to the output
https://arxiv.org/abs/1512.03385
- Note: Don't directly use the existing network design.

Describe what you did, any additional features that you implemented,
and/or any graphs that you made in the process of training and
evaluating your network.  Report final test accuracy @10 epochs in a
writeup: hw3.pdf (3 points).
'''

DESIGN DECISION

# Optimizer

I tried 2 different optimizers, SGD and Adam. For both of them, I tried turning on and off their internal optimizing modes (nesterov and amsgrad). I also tried different learning rates: [0.05, 0.01, 0.001]. I did all the possible combination of the previous optimizers. Results were as follows:

SGD; nesterov:False; lr:0.05
Got 6708 / 10000 correct (67.08)
---
SGD; nesterov:False; lr:0.01
Got 6720 / 10000 correct (67.20)
---
SGD; nesterov:False; lr:0.001
Got 4884 / 10000 correct (48.84)
---
SGD; nesterov:True; lr:0.05
Got 6692 / 10000 correct (66.92)
---
SGD; nesterov:True; lr:0.01
Got 6660 / 10000 correct (66.60)
---
SGD; nesterov:True; lr:0.001
Got 4971 / 10000 correct (49.71)
---
Adam; amsgrad:False; lr:0.05
Got 1000 / 10000 correct (10.00)
---
Adam; amsgrad:False; lr:0.01
Got 1000 / 10000 correct (10.00)
---
Adam; amsgrad:False; lr:0.001
Got 6846 / 10000 correct (68.46)
---
Adam; amsgrad:True; lr:0.05
Got 1000 / 10000 correct (10.00)
---
Adam; amsgrad:True; lr:0.01
Got 1000 / 10000 correct (10.00)
---
Adam; amsgrad:True; lr:0.001
Got 6885 / 10000 correct (68.85)
---

We observe that, for this network architecture, the best optimizer is Adam; amsgrad:True; lr:0.001, with accuracy (68.85).


# Netwok architecture
I found that an optimal election of network architecture was:
- 2 convolutions with relu activations for each of them
- max_pool with dimension 2
- dropouts of 0.25 and 0.5
- 2 fully connected leyers

PENDIENTE JUGAR!!
- Filter size, Number of filters and layers. You need to make careful choices to
tradeoff the computational efficiency and accuracy (especially in this assignment).
- Pooling vs Strided Convolution
- Batch normalization

